Let's read @Ethereal .
Is it possible to know the sent tx ID?







Yes, it is possible to know the sent transaction ID using Ethereal. When you send a transaction using the `ethereal transaction send` command, Ethereal will return the transaction ID upon successful submission. For example, when you execute a command like this:

```bash
ethereal transaction send --from=YOUR_ADDRESS --to=RECIPIENT_ADDRESS --amount="1 Ether"
```

Ethereal will output the transaction ID, which is a unique identifier for the transaction on the Ethereum blockchain. This ID can be used to track the transaction's status and details on blockchain explorers or through Ethereal's other commands, such as `ethereal transaction info`.

Additionally, Ethereal logs every action that generates a transaction to a log file, by default named `ethereal.log` in the user's home directory. This log includes the transaction IDs, among other details([1](https://github.com/wealdtech/ethereal/blob/master/README.md)).






How to get the exact tx ID and store it in a JSON file?









To get the exact transaction ID from an Ethereal command and store it in a JSON file, you can use the following approach in your Bash script:

1. Execute the `ethereal transaction send` command and capture its output, which includes the transaction ID.
2. Use `jq` to create or update a JSON file with the transaction ID.

Here's how you can modify the `blockchain-poster.sh` script to include these steps:

```bash:blockchain-poster.sh
# Send the transaction and capture the transaction ID
tx_id=$(ethereal transaction send --from=$YOUR_ADDRESS --to=$eth_address --amount="0" --data $hex_contents --passphrase=$ETH_PASSPHRASE)

# Store the transaction ID in a JSON file
echo "{\"transaction_id\": \"$tx_id\"}" | jq '.' > transaction_id.json
```

This script sends a transaction using Ethereal, captures the transaction ID returned by the command, and then uses `jq` to create a `transaction_id.json` file with the transaction ID. Ensure `jq` is installed on your system to use this command.
